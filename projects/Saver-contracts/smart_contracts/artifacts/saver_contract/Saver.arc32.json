{
    "hints": {
        "create_saver_jar(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deposit(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuc2F2ZXJfY29udHJhY3QuY29udHJhY3QuU2F2ZXIuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 10
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {
                "average_deposit_amount": {
                    "type": "uint64",
                    "key": "average_deposit_amount",
                    "descr": "Running average of deposit amounts"
                },
                "deposit_count": {
                    "type": "uint64",
                    "key": "deposit_count",
                    "descr": "Number of deposits made"
                },
                "highest_goal_achieved": {
                    "type": "uint64",
                    "key": "highest_goal_achieved",
                    "descr": "Highest savings goal achieved"
                },
                "last_user_goal": {
                    "type": "uint64",
                    "key": "last_user_goal",
                    "descr": "Previous goal before latest one"
                },
                "last_withdraw_time": {
                    "type": "uint64",
                    "key": "last_withdraw_time",
                    "descr": "Timestamp of last withdrawal"
                },
                "last_withdrawn": {
                    "type": "uint64",
                    "key": "last_withdrawn",
                    "descr": "Last amount withdrawn"
                },
                "total_saved": {
                    "type": "uint64",
                    "key": "total_saved",
                    "descr": "Lifetime total ALGO deposited by user"
                },
                "user_balance": {
                    "type": "uint64",
                    "key": "user_balance",
                    "descr": "User's savings balance"
                },
                "user_goal": {
                    "type": "uint64",
                    "key": "user_goal",
                    "descr": "User's savings goal"
                },
                "user_withdraw_count": {
                    "type": "uint64",
                    "key": "user_withdraw_count",
                    "descr": "Number of times user completed savings goal"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Saver",
        "methods": [
            {
                "name": "create_saver_jar",
                "args": [
                    {
                        "type": "uint64",
                        "name": "goal_amount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deposit",
                "args": [
                    {
                        "type": "pay",
                        "name": "deposit_txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "opt_in": "CALL",
        "no_op": "CREATE"
    }
}